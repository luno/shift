name: Sonar Report

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: test
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
        
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'

      - name: Generate Sonar Report
        run: go test -db_test_base="root@tcp(localhost:${{ job.services.mysql.ports[3306] }})/test?" -coverpkg=./... -coverprofile=coverage.out -json ./... > sonar-report.json

      - name: Upload coverage reports to Sonar
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        if: github.event.pull_request.head.repo.full_name == github.repository || env.SONAR_TOKEN != ''
        uses: SonarSource/sonarqube-scan-action@v5.1.0